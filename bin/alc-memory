#!/bin/env sh

my_name="$(basename "$0")"
default_temporary_variable_file="/tmp/al/vars"
default_permanent_variable_file="$HOME/.cache/al/vars"
temporary_variable_file="${AL_TMP_VAR_FILE:-"$default_temporary_variable_file"}"
permanent_variable_file="${AL_PERM_VAR_FILE:-"$default_permanent_variable_file"}"

explain_usage() {
cat <<EOM
usage: $my_name FILE ACTION NAME VALUE
FILE: temporary, t, permanent, p
ACTION: get, g, set, s, mutate, m, append, a, clear, c, get-all, ga, edit, e

AL_TMP_VAR_FILE='$AL_TMP_VAR_FILE'
AL_PERM_VAR_FILE='$AL_PERM_VAR_FILE'
default_temporary_variable_file='$default_temporary_variable_file'
default_permanent_variable_file='$default_permanent_variable_file'

Alternative arguments:
  -h, --help
EOM
}

clear_variable() {
  sed -i '/^\s*'"$1"'\s\+/d' "$variable_file" 2> /dev/null
}
push_variable() {
  printf "%s\n" "$1 $2" >> "$variable_file"
}
read_variable() {
  sed -n "s/^\\s*$1\\s\\+//p" "$variable_file"
}

write_variable() {
  clear_variable "$1"
  push_variable "$1" "$2"
}

mutate_variable() {
  local re='^\(\s*'"$1"'\)\s\+.*'
  local sub='\1 '"$2"
  sed -i "s/$re/$sub/" "$variable_file" 2> /dev/null
}

lengthen_variable() {
  local value="$(read_variable "$1")"
  clear_variable "$1"
  push_variable "$1" "$value$2"
}

require_args() {
  if [ "$1" = "$2" ]
  then return 0
  else printf "Got $1 arguments instead of $2\n" >&2
  fi
  return 1
}

run() {
  local file="$1" action="$2" name="$3" value="$4"
  shift 2

  case "$file" in
    temporary | t) variable_file="$temporary_variable_file" ;;
    permanent | p) variable_file="$permanent_variable_file" ;;
    *) variable_file="$file" ;;
  esac

  case "$action" in
    g | get) require_args $# 1 && read_variable "$name" ;;
    s | set) require_args $# 2 && write_variable "$name" "$value" ;;
    m | mutate) require_args $# 2 && mutate_variable "$name" "$value" ;;
    a | append) require_args $# 2 && lengthen_variable "$name" "$value" ;;
    c | clear) require_args $# 1 && clear_variable "$name" ;;
    ga | get-all) require_args $# 0 && cat "$variable_file" ;;
    e | edit) alc-terminal --float -e nvim "$variable_file" ;;
    *) explain_usage >&2 ; exit 1 ;;
  esac
}

case "$1" in
  -h | --help) explain_usage ;;
  '') explain_usage >&2 ; exit 1 ;;
  *) run "$@" ;;
esac


